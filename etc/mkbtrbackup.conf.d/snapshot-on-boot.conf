###########################################################
## Configfile for mkbackup_btrfs ##########################
###########################################################

# This Program works with systemd's ability "automount".
# Here an example for /etc/fstab-lines you need for, (or you mount the filesystems manually)
# /dev/sda is the local drive, /dev/sdb is an external HDD (USB for example)
#
# /dev/sda2	/mnt/btrfspool		btrfs	defaults,noauto,comment=systemd.automount,noatime,compress=lzo,space_cache              	0       0
# /dev/sdb5	/mnt/remote-pool	btrfs	defaults,noauto,comment=systemd.automount,noatime,compress=lzo,space_cache,subvol="backup"      0       0
#
# Be sure, /mnt/btrfspool mounts the root-pool of the btrfs-volume. If you have set some subvolume as default,
# you have to extend the options with ",subvol="0"!!!

TAG=afterboot
SYMEXTENT=LASTBOOT


# Mountpoint where the btrfs-pool which is the root filesystem ist mounted without subvolumes
# SNPMNT="/mnt/btrfspool"
SNPMNT="/var/cache/btrfs_pool_SYSTEM"

# Directory which holds local snapshots for fast restoring, optional boot from
# The Variable $SNPSTORE is an relative Path to $SOURCE, and for now, it's a good idea, to set it "."
# SNPSTORE="."
#SNPSTORE="."

# Mountpoint where the backup of the local archive is backed up. This is the mountpoint from an external HDD,
# or where a btrfs from an remote-computer is mountet with sshfs
# (the ability to work with ssh directly has to be done in future!!)
# BKPMNT=/mnt/backup-pool"
#BKPMNT="/var/cache/backup"

# Directory on the remote Disk, which holds the backed up snapshots. This is relativ $SNAPDEST
# RMTSTORE="HOSTNAME"
#BKPSTORE="aldebaran"
#BKPSTORE="$(hostname)"

# Location of the Logfile
# LOGFILE="/var/log/mkbackup.btrfs.log"
#LOGFILE="/var/log/mkbackup.btrfs.log"

# Subvols to get backed up. Delimiter is Tab!!
# Start the line with "backup". The <SUBVOLUME> is the path from the btrfsroot, is relative from SRCMNT.
# The <SNPSTORE> is a directory in $SRCMNT-Mountpoint, where the local snapshots are stored. If you want it
# directly in $SNPMNT, put a dot there 
# The <BKPSTORE> ist a directory in the $BKPMNT-Mountpoint. If nonexistent, the script creats it!
# If BKPSTORE is none, then no transfer is done. If it is not none, a automatic transfer is started
# 
# backup   <SUBVOLUME>   <SNPSTORE>	<BKPSTORE>
backup	@debian-testing	.	none
#backup	@debian-new	.	aldebaran
#backup	@debian-new/var/spool/dovecot	mailarchiv	aldebaran	
#backup	@debian-new/var/lib/mpd/music	.	aldebaran
#backup	@debian-new/home	.	aldebaran
#backup	@debian-new/home/jakob	.	aldebaran
#backup	@debian-new/home/jakob/Video	.	aldebaran
#backup	@debian-new/home/jakob/VM	.	aldebaran
#backup	@debian-new/home/tina	.	aldebaran

# The exclude-lines define, which subvolumes are not snapshotted. This is only for subvolumes and NOT for directories! In a subvolume, 
# ALL directories are snapshotted! If you want a directory not to be taken in a snapshot, change it to a btrfs-subvolume and spend him a line 
# in the exclude-section.
# not working now, maybe canceld is the function in the 3rd coloumn. Subvolumes can be selected to be stored local, but not remote (.cache for example)
#exclude	home/jakob/Video
#exclude	/var/lib/mpd/music
#exclude	jakob/VM
#exclude	.cache	local,remote
#exclude	/Cache	remote
